pipeline {
    agent any

	parameters {
        string(name: 'GIT_JAVA_URL', defaultValue: '', description: 'URL GIT repository of Java Project')
	    string(name: 'GIT_JAVA_BRANCH', defaultValue: '', description: 'URL GIT repository of Java Project')
        choice(name: 'JDK_CHOICE', choices: ['jdk8', 'jdk11', 'jdk17'], description: 'Choose JDK')
	}

    tools {
        // Install the Maven version configured as "M3" and add it to the path.
        maven "M3"
        jdk "${params.JDK_CHOICE}"
    }

    stages {
        stage('Build') {
            steps {
                // Get some code from a GitHub repository
                git branch: "${params.GIT_JAVA_BRANCH}",
					url: "${params.GIT_JAVA_URL}"

                // Run Maven on a Unix agent.
                sh "mvn -Dmaven.test.failure.ignore=true clean package"

                // To run Maven on a Windows agent, use
                // bat "mvn -Dmaven.test.failure.ignore=true clean package"
            }

            post {
                // If Maven was able to run the tests, even if some of the test
                // failed, record the test results and archive the jar file.
                success {
                    echo 'great success (test?)'
                    junit '**/target/surefire-reports/TEST-*.xml'
                    archiveArtifacts 'target/*.jar'
                }
            
                always {
                    echo 'Je passe toujours ici'
                }
                
                failure{
                    echo 'Ã§a foire ici'
                }
            }
        }
    }
}